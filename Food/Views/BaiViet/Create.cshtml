@model ReviewFood.Models.BaiViet

@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Create Bài Viết";
    ViewData["TitleHeader"] = "Thêm Bài Viết";
}
<style>
    h1 {
        text-align: center;
    }
</style>
<section class="s-content s-content--top-padding s-content--narrow">
    <h1> Tạo Bài Viết</h1>

    <article class="row entry format-standard">

        <div class="entry__media col-full">
            <div class="card card-primary content">
                <div class="row">

                    @using (Html.BeginForm("Create", "BaiViet", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(model => model.HinhAnh, "Hình Ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input type="file" name="img" id="file" required />
                                </div>
                            </div>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.TieuDe, "Tiêu Đề", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.TieuDe, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TieuDe, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(model => model.NoiDung, "Nội Dung", htmlAttributes: new { @class = "control-label col-md-2" })

                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.NoiDung, new { @class = "form-control", @id = "editor1" })
                                    @Html.ValidationMessageFor(model => model.NoiDung, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.LabelFor(model => model.DanhMuc, "Danh Mục", htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.DropDownListFor(model => model.DanhMucId, new SelectList(ViewBag.DanhMucs, "Id", "TenDanhMuc"), "Tên Danh Mục", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DanhMucId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>

                            </div>
                        </div>
                        <div>
                            @Html.ActionLink("Quay trờ lại", "/")
                        </div>
                    }

                </div>
            </div>
        </div>
    </article>

</section>


@section Scripts
{
    @{
        var message_done = ViewBag.Done;
        var message_err = ViewBag.Error;
    }
    <script>
        var message_done = '@Html.Raw(message_done)';
        var message_err = '@Html.Raw(message_err)';
        console.log(message_done)
        if (message_done != "" && message_done != null) {
            toastr.success(message_done, 'Thành công!');
        } else if (message_err != "" && message_err != null) {
            toastr.error(message_err, 'Lỗi!');
        }
        CKEDITOR.replace( 'editor1' );
    </script>
}
